{
  "resourceType": "Bundle",
  "id": "Test-bundle",
  "type": "transaction",
  "entry": [
    {
      "resource": {
        "resourceType": "Library",
        "id": "FHIRHelpers",
        "contained": [
          {
            "resourceType": "Parameters",
            "id": "options",
            "parameter": [
              {
                "name": "translatorVersion",
                "valueString": "3.9.0"
              },
              {
                "name": "option",
                "valueString": "EnableLocators"
              },
              {
                "name": "option",
                "valueString": "DisableListDemotion"
              },
              {
                "name": "option",
                "valueString": "DisableListPromotion"
              },
              {
                "name": "format",
                "valueString": "XML"
              },
              {
                "name": "format",
                "valueString": "JSON"
              },
              {
                "name": "analyzeDataRequirements",
                "valueBoolean": false
              },
              {
                "name": "collapseDataRequirements",
                "valueBoolean": false
              },
              {
                "name": "compatibilityLevel",
                "valueString": "1.5"
              },
              {
                "name": "enableCqlOnly",
                "valueBoolean": true
              },
              {
                "name": "errorLevel",
                "valueString": "Info"
              },
              {
                "name": "signatureLevel",
                "valueString": "None"
              },
              {
                "name": "validateUnits",
                "valueBoolean": true
              },
              {
                "name": "verifyOnly",
                "valueBoolean": false
              }
            ]
          }
        ],
        "extension": [
          {
            "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
            "valueReference": {
              "reference": "Device/cqf-tooling"
            }
          },
          {
            "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlOptions",
            "valueReference": {
              "reference": "#options"
            }
          }
        ],
        "url": "http://hl7.org/fhir/Library/FHIRHelpers",
        "version": "1.0.2",
        "name": "FHIRHelpers",
        "type": {
          "coding": [
            {
              "system": "http://terminology.hl7.org/CodeSystem/library-type",
              "code": "logic-library"
            }
          ]
        },
        "date": "2024-06-13T13:24:04-06:00",
        "relatedArtifact": [
          {
            "type": "depends-on",
            "display": "FHIR model information",
            "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
          }
        ],
        "content": [
          {
            "contentType": "text/cql",
            "data": ""
          },
          {
            "contentType": "application/elm+xml",
            "data": ""
          },
          {
            "contentType": "application/elm+json",
            "data": ""
          }
        ]
      },
      "request": {
        "method": "PUT",
        "url": "Library/FHIRHelpers"
      }
    },
    {
      "resource": {
  "resourceType": "Library",
  "id": "Test",
  "contained": [ {
    "resourceType": "Parameters",
    "id": "options",
    "parameter": [ {
      "name": "translatorVersion",
      "valueString": "3.9.0"
    }, {
      "name": "option",
      "valueString": "EnableAnnotations"
    }, {
      "name": "option",
      "valueString": "EnableLocators"
    }, {
      "name": "option",
      "valueString": "DisableListDemotion"
    }, {
      "name": "option",
      "valueString": "DisableListPromotion"
    }, {
      "name": "format",
      "valueString": "XML"
    }, {
      "name": "analyzeDataRequirements",
      "valueBoolean": false
    }, {
      "name": "collapseDataRequirements",
      "valueBoolean": false
    }, {
      "name": "compatibilityLevel",
      "valueString": "1.5"
    }, {
      "name": "enableCqlOnly",
      "valueBoolean": false
    }, {
      "name": "errorLevel",
      "valueString": "Info"
    }, {
      "name": "signatureLevel",
      "valueString": "None"
    }, {
      "name": "validateUnits",
      "valueBoolean": true
    }, {
      "name": "verifyOnly",
      "valueBoolean": false
    } ]
  } ],
  "extension": [ {
    "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlOptions",
    "valueReference": {
      "reference": "#options"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://content.alphora.com/fhir/uv/simple-test-ig/Library/Test",
  "version": "4.0.1",
  "name": "Test",
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "QICore model information",
    "resource": "http://hl7.org/fhir/Library/QICore-ModelInfo"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://hl7.org/fhir/Library/FHIRHelpers|1.0.2"
  }, {
    "type": "depends-on",
    "display": "Value set V2 Discharge Disposition ValueSet",
    "resource": "http://example.org/ValueSet/v2-0112"
  } ],
  "parameter": [ {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "Test Expression",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "name": "Test & #\"SpecialChars\"",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "name": "Initial Population",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Denominator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Numerator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-patient" ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://example.org/ValueSet/v2-0112"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter" ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "bGlicmFyeSBUZXN0IHZlcnNpb24gJzQuMC4xJwoKdXNpbmcgUUlDb3JlIHZlcnNpb24gJzQuMS4xJwoKaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICc0LjAuMScgY2FsbGVkIEZISVJIZWxwZXJzCgp2YWx1ZXNldCAiVjIgRGlzY2hhcmdlIERpc3Bvc2l0aW9uIFZhbHVlU2V0IiA6ICdodHRwOi8vZXhhbXBsZS5vcmcvVmFsdWVTZXQvdjItMDExMicKCmNvbnRleHQgUGF0aWVudAogCmRlZmluZSAiVGVzdCBFeHByZXNzaW9uIjogW0VuY291bnRlcjogIlYyIERpc2NoYXJnZSBEaXNwb3NpdGlvbiBWYWx1ZVNldCJdCmRlZmluZSAiVGVzdCAmICNcIlNwZWNpYWxDaGFyc1wiIjogW0VuY291bnRlci8qOiAiVjIgRGlzY2hhcmdlIERpc3Bvc2l0aW9uIFZhbHVlU2V0IiovXQogICAgICAgIC8vIFRlc3QgJiAjXFwiU3BlY2lhbENoYXJzXFwiCmRlZmluZSAiSW5pdGlhbCBQb3B1bGF0aW9uIjogdHJ1ZQpkZWZpbmUgIkRlbm9taW5hdG9yIjogdHJ1ZQpkZWZpbmUgIk51bWVyYXRvciI6IGZhbHNl"
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  } ]
},
      "request": {
        "method": "PUT",
        "url": "Library/Test"
      }
    },
    {
      "resource": {
        "resourceType": "Measure",
        "id": "Test",
        "meta": {
          "profile": [
            "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/computable-measure-cqfm"
          ]
        },
        "contained": [
          {
            "resourceType": "Library",
            "id": "effective-data-requirements",
            "extension": [
              {
                "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-logicDefinition",
                "extension": [
                  {
                    "url": "libraryName",
                    "valueString": "Test"
                  },
                  {
                    "url": "name",
                    "valueString": "Numerator"
                  },
                  {
                    "url": "statement",
                    "valueString": "define \"Numerator\": false"
                  },
                  {
                    "url": "displaySequence",
                    "valueInteger": 0
                  }
                ]
              },
              {
                "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-logicDefinition",
                "extension": [
                  {
                    "url": "libraryName",
                    "valueString": "Test"
                  },
                  {
                    "url": "name",
                    "valueString": "Denominator"
                  },
                  {
                    "url": "statement",
                    "valueString": "define \"Denominator\": true"
                  },
                  {
                    "url": "displaySequence",
                    "valueInteger": 1
                  }
                ]
              },
              {
                "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-logicDefinition",
                "extension": [
                  {
                    "url": "libraryName",
                    "valueString": "Test"
                  },
                  {
                    "url": "name",
                    "valueString": "Initial Population"
                  },
                  {
                    "url": "statement",
                    "valueString": "// Test & #\\\\\"SpecialChars\\\\\"\ndefine \"Initial Population\": true"
                  },
                  {
                    "url": "displaySequence",
                    "valueInteger": 2
                  }
                ]
              }
            ],
            "name": "EffectiveDataRequirements",
            "status": "active",
            "type": {
              "coding": [
                {
                  "system": "http://terminology.hl7.org/CodeSystem/library-type",
                  "code": "module-definition"
                }
              ]
            },
            "parameter": [
              {
                "name": "Numerator",
                "use": "out",
                "min": 0,
                "max": "1",
                "type": "boolean"
              },
              {
                "name": "Denominator",
                "use": "out",
                "min": 0,
                "max": "1",
                "type": "boolean"
              },
              {
                "name": "Initial Population",
                "use": "out",
                "min": 0,
                "max": "1",
                "type": "boolean"
              }
            ]
          }
        ],
        "extension": [
          {
            "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
            "valueReference": {
              "reference": "Device/cqf-tooling"
            }
          },
          {
            "id": "effective-data-requirements",
            "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-effectiveDataRequirements",
            "valueReference": {
              "reference": "#effective-data-requirements"
            }
          }
        ],
        "url": "http://localhost:8000/Measure/Test",
        "name": "Test",
        "title": "Simple Test Measure",
        "status": "active",
        "experimental": true,
        "date": "2024-08-21T16:17:47-07:00",
        "publisher": "Test",
        "contact": [
          {
            "telecom": [
              {
                "system": "url",
                "value": "https://Test.com"
              }
            ]
          }
        ],
        "description": "Simple Measure to test simply.",
        "useContext": [
          {
            "code": {
              "system": "http://terminology.hl7.org/CodeSystem/usage-context-type",
              "version": "4.0.1",
              "code": "program",
              "display": "Program"
            },
            "valueCodeableConcept": {
              "text": "eligible-provider"
            }
          }
        ],
        "purpose": "Efficiency and Cost Reduction.",
        "effectivePeriod": {
          "start": "2020-01-01T00:00:00-07:00",
          "end": "2020-12-31T23:59:59-07:00"
        },
        "library": ["http://localhost:8000/Library/Test"],
        "scoring": {
          "coding": [
            {
              "system": "http://terminology.hl7.org/CodeSystem/measure-scoring",
              "version": "4.0.1",
              "code": "proportion",
              "display": "Proportion"
            }
          ]
        },
        "type": [
          {
            "coding": [
              {
                "system": "http://terminology.hl7.org/CodeSystem/measure-type",
                "version": "4.2.0",
                "code": "process",
                "display": "Process"
              }
            ]
          }
        ],
        "improvementNotation": {
          "coding": [
            {
              "system": "http://terminology.hl7.org/CodeSystem/measure-improvement-notation",
              "version": "0.1.0",
              "code": "increase",
              "display": "Increased score indicates improvement"
            }
          ]
        },
        "group": [
          {
            "id": "group-1",
            "population": [
              {
                "id": "initial-population",
                "code": {
                  "coding": [
                    {
                      "system": "http://terminology.hl7.org/CodeSystem/measure-population",
                      "code": "initial-population",
                      "display": "Initial Population"
                    }
                  ]
                },
                "criteria": {
                  "language": "text/cql.identifier",
                  "expression": "Initial Population"
                }
              },
              {
                "id": "denominator",
                "code": {
                  "coding": [
                    {
                      "system": "http://terminology.hl7.org/CodeSystem/measure-population",
                      "code": "denominator",
                      "display": "Denominator"
                    }
                  ]
                },
                "criteria": {
                  "language": "text/cql.identifier",
                  "expression": "Denominator"
                }
              },
              {
                "id": "numerator",
                "code": {
                  "coding": [
                    {
                      "system": "http://terminology.hl7.org/CodeSystem/measure-population",
                      "code": "numerator",
                      "display": "Numerator"
                    }
                  ]
                },
                "criteria": {
                  "language": "text/cql.identifier",
                  "expression": "Numerator"
                }
              }
            ]
          }
        ]
      },
      "request": {
        "method": "PUT",
        "url": "Measure/Test"
      }
    },
    {
      "resource": {
  "resourceType": "Encounter",
  "id": "simple-test-encounter",
  "meta" : {
    "profile" : [
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter"
    ]
  },
  "status": "finished",
  "class": {
    "system": "http://terminology.hl7.org/CodeSystem/v3-ActCode",
    "code": "AMB",
    "display": "ambulatory"
  },
  "type": [
    {
      "coding": [
        {
          "system": "http://example.org/CodeSystem/v2-0112",
          "code": "01",
          "display": "Discharged to home or self-care (routine discharge)"
        }
      ]
    }
  ],
  "subject": {
    "reference": "Patient/simple-test"
  }
},
      "request": {
        "method": "PUT",
        "url": "Encounter/simple-test-encounter"
      }
    },
    {
      "resource": {
  "resourceType": "Patient",
  "meta" : {
    "profile" : [
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-patient"
    ]
  },
  "identifier" : [
    {
      "use" : "usual",
      "type" : {
        "coding" : [
          {
            "system" : "http://terminology.hl7.org/CodeSystem/v2-0203",
            "code" : "MR",
            "display" : "Medical Record Number"
          }
        ],
        "text" : "Medical Record Number"
      },
      "system" : "http://hospital.smarthealthit.org",
      "value" : "1032702"
    }
  ],
  "id": "simple-test",
  "active": true,
  "name": [
    {
      "use": "official",
      "family": "Bottel",
      "given": ["Blenda"]
    }
  ],
  "gender": "female",
  "birthDate": "1989-05-12",
  "deceasedBoolean": false
},
      "request": {
        "method": "PUT",
        "url": "Patient/simple-test"
      }
    },
    {
      "resource": {
        "resourceType": "ValueSet",
        "id": "example-v2-0112-valueset",
        "meta": {
          "profile": [
            "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-shareablevalueset",
            "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-publishablevalueset",
            "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-executablevalueset"
          ]
        },
        "extension": [
          {
            "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
            "valueCode": "shareable"
          },
          {
            "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeRepresentationLevel",
            "valueCode": "narrative"
          },
          {
            "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
            "valueCode": "publishable"
          },
          {
            "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
            "valueCode": "executable"
          },
          {
            "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeRepresentationLevel",
            "valueCode": "executable"
          },
          {
            "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-usageWarning",
            "valueString": "This value set contains a point-in-time expansion enumerating the codes that meet the value set intent. As new versions of the code systems used by the value set are released, the contents of this expansion will need to be updated to incorporate newly defined codes that meet the value set intent. Before, and periodically during production use, the value set expansion contents SHOULD be updated. The value set expansion specifies the timestamp when the expansion was produced, SHOULD contain the parameters used for the expansion, and SHALL contain the codes that are obtained by evaluating the value set definition. If this is ONLY an executable value set, a distributable definition of the value set must be obtained to compute the updated expansion."
          }
        ],
        "url": "http://example.org/ValueSet/v2-0112",
        "version": "20231114",
        "title": "V2 Discharge Disposition ValueSet",
        "status": "active",
        "experimental": false,
        "publisher": "Vituity",
        "expansion": {
          "timestamp": "2023-11-14T16:22:59-05:00",
          "contains": [
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "01",
              "display": "Discharged to home or self-care (routine discharge)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "02",
              "display": "Discharged/transferred to a short-term general hospital for inpatient care"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "03",
              "display": "Discharged/transferred to skilled nursing facility (SNF) with Medicare certification"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "04",
              "display": "Discharged/transferred to a facility that provides custodial or supportive care"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "05",
              "display": "Discharged/transferred to a designated cancer center or children's hospital"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "06",
              "display": "Discharged/transferred to home under care of organized home health service organization in anticipation of covered skilled care"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "07",
              "display": "Left against medical advice or discontinued care"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "08",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "09",
              "display": "Admitted as an inpatient to this hospital"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "10",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "11",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "12",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "13",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "14",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "15",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "16",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "17",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "18",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "19",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "20",
              "display": "Expired"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "21",
              "display": "Discharged/transferred to court/law enforcement"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "22",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "23",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "24",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "25",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "26",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "27",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "28",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "29",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "30",
              "display": "Still patient"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "31",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "32",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "33",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "34",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "35",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "36",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "37",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "38",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "39",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "40",
              "display": "Expired at home"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "41",
              "display": "Expired in a medical facility (e.g., hospital, SNF, ICF, or free-standing hospice)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "42",
              "display": "Expired - place unknown"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "43",
              "display": "Discharged/transferred to a federal health care facility"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "44",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "45",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "46",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "47",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "48",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "49",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "50",
              "display": "Hospice - home"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "51",
              "display": "Hospice - medical facility (certified) providing hospice level of care"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "52",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "53",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "54",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "55",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "56",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "57",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "58",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "59",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "60",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "61",
              "display": "Discharged/transferred to a hospital-based Medicare approved swing bed"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "62",
              "display": "Discharged/transferred to an inpatient rehabilitation facility (IRF) including rehabilitation distinct part units of a hospital"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "63",
              "display": "Discharged/transferred to a Medicare certified long term care hospital (LTCH)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "64",
              "display": "Discharged/transferred to a nursing facility certified under Medicaid but not certified under Medicare"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "65",
              "display": "Discharged/transferred to a psychiatric hospital or psychiatric distinct part unit of a hospital"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "66",
              "display": "Discharged/transferred to a critical access hospital (CAH)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "67",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "68",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "69",
              "display": "Discharged/transferred to a designated disaster alternate care site (effective 10/1/13)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "70",
              "display": "Discharged/transferred to another type of health care institution not defined elsewhere in this code list"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "71",
              "display": "Discontinued 4/1/03"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "72",
              "display": "Discontinued 4/1/03"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "73",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "74",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "75",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "76",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "77",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "78",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "79",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "80",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "81",
              "display": "Discharged to home or self-care with a planned acute care hospital inpatient readmission (effective 10/1/13)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "82",
              "display": "Discharged/transferred to a short-term general hospital for inpatient care with a planned acute care hospital inpatient readmission (effective 10/1/13)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "83",
              "display": "Discharged/transferred to a skilled nursing facility (SNF) with Medicare certification with a planned acute care hospital inpatient readmission (effective 10/1/13)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "84",
              "display": "Discharged/transferred to a facility that provides custodial or supportive care with a planned acute care hospital inpatient readmission (effective 10/1/13)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "85",
              "display": "Discharged/transferred to a designated cancer center or children's hospital with a planned acute care hospital inpatient readmission (effective 10/1/13)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "86",
              "display": "Discharged/transferred to home under care of organized home health service organization in anticipation of covered skilled care with a planned acute care hospital inpatient readmission (effective 10/1/13)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "87",
              "display": "Discharged/transferred to court/law enforcement with a planned acute care hospital inpatient readmission (effective 10/1/13)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "88",
              "display": "Discharged/transferred to a federal health care facility with a planned acute care hospital inpatient readmission (effective 10/1/13)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "89",
              "display": "Discharged/transferred to a hospital-based Medicare approved swing bed with a planned acute care hospital inpatient readmission (effective 10/1/13)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "90",
              "display": "Discharged/transferred to an inpatient rehabilitation facility (IRF) including rehabilitation distinct part units of a hospital with a planned acute care hospital inpatient readmission (effective 10/1/13)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "91",
              "display": "Discharged/transferred to a Medicare certified long term care hospital (LTCH) with a planned acute care hospital inpatient readmission (effective 10/1/13)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "92",
              "display": "Discharged/transferred to a nursing facility certified under Medicaid but not certified under Medicare with a planned acute care hospital inpatient readmission (effective 10/1/13)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "93",
              "display": "Discharged/transferred to a psychiatric hospital or psychiatric distinct part unit of a hospital with a planned acute care hospital inpatient readmission (effective 10/1/13)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "94",
              "display": "Discharged/transferred to a critical access hospital (CAH) with a planned acute care hospital inpatient readmission (effective 10/1/13)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "95",
              "display": "Discharged/transferred to another type of health care institution not defined elsewhere in this code list with a planned acute care hospital inpatient readmission (effective 10/1/13)"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "96",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "97",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "98",
              "display": "Reserved for national assignment"
            },
            {
              "system": "http://example.org/CodeSystem/v2-0112",
              "code": "99",
              "display": "Reserved for national assignment"
            }
          ]
        }
      },
      "request": {
        "method": "PUT",
        "url": "ValueSet/example-v2-0112-valueset"
      }
    }
  ]
}
